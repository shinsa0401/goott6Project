<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boritgogae.AdminMapper">
	<!-- 관리자 페이지 회원 관련 쿼리문 시작  -->
	<select id="getMembers" resultType="MemberVo">
		select * from members where delStatus = 'N' order by joinDate desc
	</select>

	<select id="getNewMembers" resultType="MemberVo">
		select * from members
		where joinDate between date_sub(now(), interval 30 day) and now() and
		delStatus = 'N'
	</select>
	
	<select id="getMemberProfile" resultType="MemberVo">
		select * from members where memberId = #{memberId}
	</select>

	<select id="getDelMembers" resultType="DeleteAccountVo">
		select * from deleteAccount order by deleteDate desc
	</select>
	
	<select id="getDeleteReason" resultType="DeleteReasonVo">
		select * from deleteReason order by deleteCode
	</select>
	
	<select id="searchMember" resultType="MemberVo">
		select * from members where nickName = #{inputString} or memberId = #{inputString} or memberName = #{memberName}
	</select>
	
	<select id="getMemberAddress" resultType="deliveryInfoVo">
		select * from deliveryInfo where memberId = #{memberId}
	</select>
	
	<update id="modifyMemberForAdmin">
		update members set memberPwd = sha1(md5(#{memberPwd})), memberName = #{memberName}, 
		memberEmail = #{memberEmail}, nickName = #{nickName}, phoneNumber = #{phoneNumber} 
	 	where memberId = #{memberId}
	</update>

	<delete id="deleteMember">
		delete from members where memberId = #{memberId}
	</delete>
	
	<select id="getLogInMemberCount" resultType="int">
		select count(*) from members where logInDate 
		between (select STR_TO_DATE(DATE_FORMAT(now(), '%Y-%m-%d 00:00:00'), '%Y-%m-%d %T') as today) 
		and now() + 1
	</select>
	
	<!-- 관리자 페이지 회원 관련 쿼리문 끝 -->
	
	<!-- 관리자 페이지 상품 관련 쿼리문 시작 -->
	
	<select id="getLowestProductQTY" resultType="ProductVO">
  	<![CDATA[
  		select * from product where prodQuantity < 100 
  	]]>
	</select>
	
	<select id="getTopLikeCount" resultType="ProductVO">
		select * from product order by likeCount desc limit 0, 5
	</select>
	
	<select id="getTopReadCount" resultType="ProductVO">
		select * from product order by readCount desc limit 0, 5
	</select>
	
	<select id="getNewOrder" resultType="OrdersVo">
		select o.* from orders as o inner Join detailOrder as d
		on o.orderNo = d.orderNo where d.purchaseConfirm = 'N'
	</select>
	
	<!-- 관리자 페이지 상품 관련 쿼리문 끝 -->
	

	<!-- 관리자 페이지 쿠폰 관련 쿼리문 시작 -->
	
	<select id="getCoupon" resultType="CouponVo">
		select * from coupon
	</select>
	
	<select id="getCouponFromMember" resultType="CouponUsedVo">
		select * from couponUsed where memberId = #{memberId}
	</select>

	<insert id="createCoupon">
		insert into coupon values (#{couponName}, #{couponDiscount},
		#{couponUseDate})
	</insert>

	<delete id="delCoupon">
		delete from coupon where couponName = #{couponName}
	</delete>

	<update id="modifyCoupon">
		update coupon set couponName = #{coupon.couponName}, couponDiscount =
		#{coupon.couponDiscount}, couponUseDate = #{coupon.couponUseDate}
		where couponName = #{modiCouponName}
	</update>

	<insert id="sendCoupon">
		insert into couponUsed (memberId, couponName, issueDate, expirationDate, couponWhy
		)
		values (#{memberId}, #{couponName}, now(), (SELECT DATE_ADD(NOW(), INTERVAL
		(select couponUseDate from coupon where couponName = #{couponName})
		day) as date), #{couponWhy})
	</insert>
	
	<!-- 관리자 페이지 쿠폰 관련 쿼리문 끝 -->

	
</mapper>
